<!-- App.svelte -->
<script>
  import { onMount } from 'svelte';
  import {
    createAccount,
    getDbcBalance,
    transferDbc,
    signData,
    getCurrentBlockNumber,
    getDbcPrice
  } from '$lib/utils/wallet/dgc';

  let accountAddress = "";
  let transferToAddress = "";
  let transferAmount = 0;
  let transferPrivateKey = "";
  let testData = "Hello, world!";
  let testPrivateKey = "";

  function handleCreateAccount() {
    createAccount().then(wallet => {
      accountAddress = wallet.address;
      console.log("New account created:", wallet);
    }).catch(err => {
      console.error("Failed to create account:", err);
    });
  }

  function handleGetEthBalance() {
    if (accountAddress) {
      getDbcBalance(accountAddress).then(balance => {
        console.log("Balance:", balance.toString());
      }).catch(err => {
        console.error("Failed to get balance:", err);
      });
    } else {
      console.error("Account address is not set.");
    }
  }

  function handleTransferEth() {
    if (transferToAddress && transferAmount && transferPrivateKey) {
      transferDbc(transferToAddress, transferAmount, transferPrivateKey).then(tx => {
        console.log("Transfer successful:", tx);
      }).catch(err => {
        console.error("Failed to transfer ETH:", err);
      });
    } else {
      console.error("Transfer details are incomplete.");
    }
  }

  function handleSignData() {
    if (testPrivateKey) {
      signData(testData, testPrivateKey).then(signature => {
        console.log("Data signed:", signature);
      }).catch(err => {
        console.error("Failed to sign data:", err);
      });
    } else {
      console.error("Private key is not set.");
    }
  }

  function handleGetCurrentBlockNumber() {
    getCurrentBlockNumber().then(blockNumber => {
      console.log("Current block number:", blockNumber);
    }).catch(err => {
      console.error("Failed to get current block number:", err);
    });
  }

  function handleGetEthPrice() {
    getDbcPrice().then(price => {
      console.log("Current ETH price:", price);
    }).catch(err => {
      console.error("Failed to get ETH price:", err);
    });
  }
</script>


<div>
	<h1>Ethereum Interaction Demo</h1>

	<button on:click={handleCreateAccount}>创建账号</button>
	<button on:click={handleGetEthBalance}>获取 ETH 余额</button>
	<button on:click={handleTransferEth}>转账 ETH</button>
	<button on:click={handleSignData}>签署数据</button>
	<button on:click={handleGetCurrentBlockNumber}>获取当前区块号</button>
	<button on:click={handleGetEthPrice}>获取 ETH 价格</button>
	
	<p>Account Address: {accountAddress}</p>
	<input type="text" bind:value={transferToAddress} placeholder="Transfer To Address">
	<input type="number" bind:value={transferAmount} placeholder="Amount ETH">
	<input type="text" bind:value={transferPrivateKey} placeholder="Sender Private Key">
	<br>
	<input type="text" bind:value={testData} placeholder="Data to Sign">
	<input type="text" bind:value={testPrivateKey} placeholder="Signer Private Key">
	
</div>


<style>
	button {
		display: block;
		/* background-color: ; */
		margin: 16px;
	}
</style>